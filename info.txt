
To run a Django command, either of these options will work:
    > django-admin <command> [options]
    > python manage.py <command> [options]

To create a new django project:
    > django-admin startproject myproject

To create a new django app:
    > cd myproject (optional, not required)
    > (method 1) python manage.py startapp myapp
    > (method 2) django-admin startapp myapp

To link a new app to a project:
    * Edit myproject/settings.py
    * Add one of the following to INSTALLED_APPS:
    *   "myapp" OR "myapp.apps.MyappConfig"

To start the django server:
    > python manage.py runserver 8001          # to change the port
    > python manage.py runserver 0.0.0.0:8000  # to change the IP address and port

To edit the emmet settings (for language file types):
    * Type control-comma
    * Type emmet
    * Scroll down to Emmet: Include Languages
    * add: django-html -> html 

Default URL's:
    project site: http://127.0.0.1:8000 
    admin site: http://127.0.0.1:8000/admin

To create a django database superuser:
    > (stop the server, control-C)
    > python manage.py createsuperuser
    > (use admin/admin)
    > python manage.py runserver (restart the server)
    > goto http://127.0.0.1:8000/admin
    > Login as admin/admin

To initially migrate the built-in django database tables:
    > (stop the server, control-C)
    > python manage.py migrate
    > python manage.py runserver (restart the server)
    * Use a DB Browser tool to view the database tables

To migrate database/model changes (do this each time a db model change is made):
    > (stop the server, control-C)
    > python manage.py makemigrations <myapp : optional>
    > python manage.py migrate
    > (optional) py manage.py sqlmigrate myapp 0001   # to see the SQL that will be used
    > python manage.py runserver (restart the server)
    * Use a DB Browser tool to view the database tables
    * Optionally, generate the database model using the built-in Django command:
    > python manage.py inspectdb > app/models.py

To collect all of the static files into the 'xxxxx/static' directory (for deployment):
    # Change "xxxxx" to whatever folder name you want ("assets", etc)
    # In settings.py:
        STATIC_URL = 'static/'
        STATICFILES_DIRS = [ BASE_DIR / "static" ]
        STATIC_ROOT = BASE_DIR.parent / "xxxxx" / "static"
    > python manage.py collectstatic

To start a Python shell:
    > python manage.py shell

To use css bootstrap:
    * https://bootswatch.com/, OR
    * Use the Bootstrap CDN (css only, getbootstrap.com)
    # Note: App-specific css links must appear after the bootstrap css link.

To check the entire project for issues:
    > python manage.py check

To download the Harvard CS50 movies dataset:

    * https://cdn.cs50.net/2021/fall/psets/7/movies.zip (wget optional)

